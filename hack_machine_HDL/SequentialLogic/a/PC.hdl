// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
    Or(a=reset, b=load, out=result);
	Or(a=result, b=inc, out=Regload);
	// Select based on "load"
	Mux16(a=incrementedResult, b=in, sel=load, out=step1Result);
	// Select based on "reset"
	Mux16(a=step1Result, b=false, sel=reset, out=step2Result);
	// Select based on "Regload"
	Register(in=step2Result, load=Regload, out=out, out=step3Result);
	// PC += 1
	Inc16(in=step3Result, out=incrementedResult);
}
